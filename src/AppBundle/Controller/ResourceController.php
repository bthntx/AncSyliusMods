<?php
/**
 * Created by PhpStorm.
 * User: beathan
 * Date: 26.05.2018
 * Time: 19:44
 */

namespace AppBundle\Controller;


use FOS\RestBundle\View\View;
use Sylius\Bundle\ResourceBundle\Controller\ResourceController as BaseController;
use Sylius\Component\Resource\ResourceActions;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;


class ResourceController extends BaseController
{
    public function indexAction(Request $request): Response
    {
        if ($request->get('limit')) {
            $request->getSession()->set('perPageLimit',$request->get('limit'));
        } elseif ($request->getSession()->get('perPageLimit')>0) {
            $request->query->add(['limit' => $request->getSession()->get('perPageLimit')]);
        }
        return parent::indexAction($request); // TODO: Change the autogenerated stub
    }


    /**
     * @param Request $request
     *
     * @return Response
     */
    public function filterListAction(Request $request): Response
    {
        $configuration = $this->requestConfigurationFactory->create($this->metadata, $request);

        $this->isGrantedOr403($configuration, ResourceActions::INDEX);
        $resources = $this->resourcesCollectionProvider->get($configuration, $this->repository);

        $this->eventDispatcher->dispatchMultiple(ResourceActions::INDEX, $configuration, $resources);

        $view = View::create($resources);

        //Find taxon
        $taxonsNames = explode('|', $request->get('slugs'));
        $taxonRepository = $this->get('sylius.repository.taxon');
        $taxons = [];
        foreach ($taxonsNames as $row) {
            $taxon = $taxonRepository->findOneBySlug($row, $request->getLocale());
            if ($taxon) {
                $taxons[$taxon->getRoot()->getName()] = $taxon;
            }
        }

        if ($configuration->isHtmlRequest()) {
            $view
                ->setTemplate($configuration->getTemplate(ResourceActions::INDEX.'.html'))
                ->setTemplateVar($this->metadata->getPluralName())
                ->setData([
                    'configuration' => $configuration,
                    'metadata' => $this->metadata,
                    'resources' => $resources,
                    'appliedTaxons' => $taxons,
                    $this->metadata->getPluralName() => $resources,
                ]);
        }

        return $this->viewHandler->handle($configuration, $view);
    }

}